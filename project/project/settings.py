"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 4.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
from django.utils.translation import gettext_lazy as _

import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


env = environ.Env(
    DEBUG = (bool, False),
    ALLOWED_HOSTS = (list, []),

    DATABASE_ENGINE = (str, 'django.db.backends.postgresql'),
    DATABASE_HOST = (str, 'localhost'),
    DATABASE_PORT = (int, 5432),
    DATABASE_NAME = (str, 'water_submeter_bill'),
)

# Read from .env file or ENV_FILE variable
environ.Env.read_env(env.str(var='ENV_PATH', default=str(BASE_DIR.parent / '.env')))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DEBUG')

ALLOWED_HOSTS = env('ALLOWED_HOSTS')


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'django_jalali',
    'adminsortable2',
    'django_extensions',
    'ckeditor',
    'ckeditor_uploader',
    'building',
    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    # 'django.middleware.locale.LocaleMiddleware',  # for localization
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': env('DATABASE_ENGINE'),
        'NAME': env('DATABASE_NAME'),
        'HOST': env('DATABASE_HOST'),
        'PORT': env('DATABASE_PORT'),
        'USER': env('DATABASE_USER'),
        'PASSWORD': env('DATABASE_PASSWORD')
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'fa'

TIME_ZONE = 'Asia/Tehran'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATICFILES_DIRS = [
    BASE_DIR / 'project/static',
]
STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'static'

MEDIA_URL = 'media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# LANGUAGES = [
#     ('en', _('English')),
#     ('fa', _('Farsi')),
# ]


# My variables
CITY_COEFFICIENT = 1.49  # tehran

# CKEditor configs
CKEDITOR_UPLOAD_PATH = "ck_uploads/"
# Restrict access to uploaded images to the uploading user
CKEDITOR_RESTRICT_BY_USER = "True"

CKEDITOR_CONFIGS = {
    'default': {
        
        'skin': 'moono', # also have moonocolor, moono-dark
        'toolbar_Basic': [
            ['Source', '-', 'Bold', 'Italic']
        ],
        'toolbar_Custom': [
            {'name': 'document', 
                'items': ['Source', '-', 'Save', 'NewPage', 'Preview', 'Print', 'ExportPdf', '-', 'Templates']},
            
            {'name': 'clipboard', 'items': ['PasteText', 'PasteFromWord', '-', 'Undo', 'Redo']},
            
            {'name': 'editing', 'items': ['Find', '-', 'SelectAll']},
            
            '/',
            
            {'name': 'basicstyles',
             'items': ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'RemoveFormat']},
           
            {'name': 'paragraph',
             'items': ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', 'CreateDiv', '-',
                       'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'BidiLtr', 'BidiRtl']},
           
            {'name': 'links', 'items': ['Link', 'Unlink', 'Anchor']},
           
            {'name': 'insert',
             'items': ['Image', 'Table', 'HorizontalRule', 'Smiley', 'SpecialChar', 'PageBreak']},
            '/',
           
            {'name': 'styles', 'items': ['Styles', 'Format', 'Font', 'FontSize']},
           
            {'name': 'colors', 'items': ['TextColor', 'BGColor']},
           
            {'name': 'tools', 'items': ['Maximize', 'ShowBlocks', 'EmojiPanel']},
           
            '/',  # put this to force next toolbar on new line
           
            {'name': 'Customtools', 'items': [
                # put the name of your editor.ui.addButton here
                'Preview',
                'Maximize',
                'CodeSnippet'
            ]},
        ],
        'toolbar': 'Custom',  # put selected toolbar config here
        'toolbarCanCollapse': True,
        'tabSpaces': 4,


        'extraPlugins': ','.join([

            'uploadimage', # the upload image feature

            'autocomplete',
            'textmatch',
            'textwatcher',
            'emoji',
        ]),
        
         # we can pass list too, for multiple css files
        'contentsCss': '/static/css/farsi_fonts.css',
        'font_names': 'BNazanin; Yekan; BTitrBold; \
            Times New Roman; Courier New; Courier; Arial; Comic Sans MS; \
            Georgia; Lucida Sans Unicode; Tahoma; Trebuchet MS; Verdana'
    }
}